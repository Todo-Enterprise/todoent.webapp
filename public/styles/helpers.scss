$sizes: (
  ('0', 0),
  ('1', 0.125),
  ('2', 0.25),
  ('3', 0.5),
  ('4', 1),
  ('5', 2),
  ('6', 4),
  ('7', 8),
);

$positions: (
  ('t', 'top'),
  ('r', 'right'),
  ('b', 'bottom'),
  ('l', 'left')
);

@function sizeValue($key, $value) {
  @return if($key == '0', 0, $value + rem);
}

@each $size in $sizes {
  $sizeKey: nth($size, 1);
  $sizeValue: nth($size, 2);
  .has-m-#{$sizeKey} {
    margin: sizeValue($sizeKey, $sizeValue) !important;
  }
  .has-p-#{$sizeKey} {
    padding: sizeValue($sizeKey, $sizeValue) !important;
  }
  @each $position in $positions {
    $posKey: nth($position, 1);
    $posValue: nth($position, 2);
    .has-m#{$posKey}-#{$sizeKey} {
      margin-#{$posValue}: sizeValue($sizeKey, $sizeValue) !important;
    }
    .has-p#{$posKey}-#{$sizeKey} {
      padding-#{$posValue}: sizeValue($sizeKey, $sizeValue) !important;
    }
  }
}

@for $i from 1 through 16 {
  .has-height-#{$i} {
    height: if($i == 0, 0, $i + rem);
  }
}

.is-borderless {
  border: none;
}

div.is-rounded {
  border-radius: 290486px;
  border-top-left-radius: 290486px;
  border-top-right-radius: 290486px;
  border-bottom-right-radius: 290486px;
  border-bottom-left-radius: 290486px;
  padding-left: calc(calc(.75em - 1px) + .375em);
  padding-right: calc(calc(.75em - 1px) + .375em);
}

.is-round {
  border-radius: 50%;
}

.is-flex-align-end {
  justify-content: flex-end;
}
